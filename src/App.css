@keyframes fadeInMoveUp {
  0% {
    opacity: 0;
    top: 40%;
  }

  40% {
    opacity: 1;
    top: 35%;
  }

  90% {
    opacity: 1;
    top: 30%;
  }

  100% {
    opacity: 0;
    top: 30%;
  }
}

::-webkit-scrollbar {
  width: 10px;
  /* Adjust the width of the scrollbar */
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
  /* Color of the tracking area */
}

::-webkit-scrollbar-thumb {
  background: #888;
  /* Color of the scroll thumb */
  border-radius: 10px;

  /* Roundness of the scroll thumb */
  &:hover {
    background: #555;
    /* Color of the scroll thumb on hover */
  }
}

.not-selectable {
  user-select: none;
  pointer-events: none;
}

/* For Firefox */
* {
  scrollbar-width: thin;
  /* "auto" or "thin" */
  scrollbar-color: #888 #f1f1f1;
  /* thumb and track color */
}


.animate-fadeInMoveUp {
  animation-name: fadeInMoveUp;
  animation-duration: 0.5s;
  /* Adjust duration as needed */
  animation-fill-mode: both;
  /* Keeps the final state */
}

#root {
  width: 100%;
  height: 100vh;
  margin: 0 auto;
  text-align: center;
  min-width: 380PX;
  min-height: 590px;
  background: radial-gradient(68.4% 68.4% at 51.16% 53.22%, #1E4759 0%, #020304 100%);
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}

.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}

.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

/* Add this CSS to your project */
.coin {
  position: absolute;
  top: -30px;
  /* Start position above the screen */
  width: 30px;
  /* Adjust size of the coin */
  height: 30px;
  background-color: gold;
  /* Color of the coin */
  border-radius: 50%;
  /* Make it round */
  animation: fall 2s ease-out forwards;
  /* Animation duration and easing */
}

@keyframes fall {
  0% {
    transform: translateY(-150px);
    /* Start position above the screen */
    opacity: 1;
    /* Start fully visible */
  }

  100% {
    transform: translateY(100vh);
    /* End position at the bottom of the screen */
    opacity: 0;
    /* Fade out as it falls */
  }
}